/*
Copyright 2020 caicloud authors. All rights reserved.
*/

// Code generated by informer-gen. DO NOT EDIT.

package v1alpha3

import (
	internalinterfaces "github.com/caicloud/clientset/custominformers/internalinterfaces"
)

// Interface provides access to all the informers in this group version.
type Interface interface {
	// Flavors returns a FlavorInformer.
	Flavors() FlavorInformer
	// MLNeurons returns a MLNeuronInformer.
	MLNeurons() MLNeuronInformer
	// MLProjects returns a MLProjectInformer.
	MLProjects() MLProjectInformer
	// MLTasks returns a MLTaskInformer.
	MLTasks() MLTaskInformer
}

type version struct {
	factory          internalinterfaces.SharedInformerFactory
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// New returns a new Interface.
func New(f internalinterfaces.SharedInformerFactory, namespace string, tweakListOptions internalinterfaces.TweakListOptionsFunc) Interface {
	return &version{factory: f, namespace: namespace, tweakListOptions: tweakListOptions}
}

// Flavors returns a FlavorInformer.
func (v *version) Flavors() FlavorInformer {
	return &flavorInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// MLNeurons returns a MLNeuronInformer.
func (v *version) MLNeurons() MLNeuronInformer {
	return &mLNeuronInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// MLProjects returns a MLProjectInformer.
func (v *version) MLProjects() MLProjectInformer {
	return &mLProjectInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// MLTasks returns a MLTaskInformer.
func (v *version) MLTasks() MLTaskInformer {
	return &mLTaskInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}
