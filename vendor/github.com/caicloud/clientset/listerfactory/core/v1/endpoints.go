/*
Copyright 2018 caicloud authors. All rights reserved.
*/

// Code generated by listerfactory-gen. DO NOT EDIT.

package v1

import (
	internalinterfaces "github.com/caicloud/clientset/listerfactory/internalinterfaces"
	corev1 "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/labels"
	kubernetes "k8s.io/client-go/kubernetes"
	v1 "k8s.io/client-go/listers/core/v1"
)

var _ v1.EndpointsLister = &endpointsLister{}

var _ v1.EndpointsNamespaceLister = &endpointsNamespaceLister{}

// endpointsLister implements the EndpointsLister interface.
type endpointsLister struct {
	client           kubernetes.Interface
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// NewEndpointsLister returns a new EndpointsLister.
func NewEndpointsLister(client kubernetes.Interface) v1.EndpointsLister {
	return NewFilteredEndpointsLister(client, nil)
}

func NewFilteredEndpointsLister(client kubernetes.Interface, tweakListOptions internalinterfaces.TweakListOptionsFunc) v1.EndpointsLister {
	return &endpointsLister{
		client:           client,
		tweakListOptions: tweakListOptions,
	}
}

// List lists all Endpoints in the indexer.
func (s *endpointsLister) List(selector labels.Selector) (ret []*corev1.Endpoints, err error) {
	listopt := metav1.ListOptions{
		LabelSelector: selector.String(),
	}
	if s.tweakListOptions != nil {
		s.tweakListOptions(&listopt)
	}
	list, err := s.client.CoreV1().Endpoints(metav1.NamespaceAll).List(listopt)
	if err != nil {
		return nil, err
	}
	for i := range list.Items {
		ret = append(ret, &list.Items[i])
	}
	return ret, nil
}

// Endpoints returns an object that can list and get Endpoints.
func (s *endpointsLister) Endpoints(namespace string) v1.EndpointsNamespaceLister {
	return endpointsNamespaceLister{client: s.client, tweakListOptions: s.tweakListOptions, namespace: namespace}
}

// endpointsNamespaceLister implements the EndpointsNamespaceLister
// interface.
type endpointsNamespaceLister struct {
	client           kubernetes.Interface
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// List lists all Endpoints in the indexer for a given namespace.
func (s endpointsNamespaceLister) List(selector labels.Selector) (ret []*corev1.Endpoints, err error) {
	listopt := metav1.ListOptions{
		LabelSelector: selector.String(),
	}
	if s.tweakListOptions != nil {
		s.tweakListOptions(&listopt)
	}
	list, err := s.client.CoreV1().Endpoints(s.namespace).List(listopt)
	if err != nil {
		return nil, err
	}
	for i := range list.Items {
		ret = append(ret, &list.Items[i])
	}
	return ret, nil
}

// Get retrieves the Endpoints from the indexer for a given namespace and name.
func (s endpointsNamespaceLister) Get(name string) (*corev1.Endpoints, error) {
	return s.client.CoreV1().Endpoints(s.namespace).Get(name, metav1.GetOptions{})
}
