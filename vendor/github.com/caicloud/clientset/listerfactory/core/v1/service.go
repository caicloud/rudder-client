/*
Copyright 2018 caicloud authors. All rights reserved.
*/

// Code generated by listerfactory-gen. DO NOT EDIT.

package v1

import (
	internalinterfaces "github.com/caicloud/clientset/listerfactory/internalinterfaces"
	corev1 "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/labels"
	kubernetes "k8s.io/client-go/kubernetes"
	v1 "k8s.io/client-go/listers/core/v1"
)

var _ v1.ServiceLister = &serviceLister{}

var _ v1.ServiceNamespaceLister = &serviceNamespaceLister{}

// serviceLister implements the ServiceLister interface.
type serviceLister struct {
	client           kubernetes.Interface
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// NewServiceLister returns a new ServiceLister.
func NewServiceLister(client kubernetes.Interface) v1.ServiceLister {
	return NewFilteredServiceLister(client, nil)
}

func NewFilteredServiceLister(client kubernetes.Interface, tweakListOptions internalinterfaces.TweakListOptionsFunc) v1.ServiceLister {
	return &serviceLister{
		client:           client,
		tweakListOptions: tweakListOptions,
	}
}

// List lists all Services in the indexer.
func (s *serviceLister) List(selector labels.Selector) (ret []*corev1.Service, err error) {
	listopt := metav1.ListOptions{
		LabelSelector: selector.String(),
	}
	if s.tweakListOptions != nil {
		s.tweakListOptions(&listopt)
	}
	list, err := s.client.CoreV1().Services(metav1.NamespaceAll).List(listopt)
	if err != nil {
		return nil, err
	}
	for i := range list.Items {
		ret = append(ret, &list.Items[i])
	}
	return ret, nil
}

func (s *serviceLister) GetPodServices(*corev1.Pod) ([]*corev1.Service, error) {
	return nil, nil
}

// Services returns an object that can list and get Services.
func (s *serviceLister) Services(namespace string) v1.ServiceNamespaceLister {
	return serviceNamespaceLister{client: s.client, tweakListOptions: s.tweakListOptions, namespace: namespace}
}

// serviceNamespaceLister implements the ServiceNamespaceLister
// interface.
type serviceNamespaceLister struct {
	client           kubernetes.Interface
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// List lists all Services in the indexer for a given namespace.
func (s serviceNamespaceLister) List(selector labels.Selector) (ret []*corev1.Service, err error) {
	listopt := metav1.ListOptions{
		LabelSelector: selector.String(),
	}
	if s.tweakListOptions != nil {
		s.tweakListOptions(&listopt)
	}
	list, err := s.client.CoreV1().Services(s.namespace).List(listopt)
	if err != nil {
		return nil, err
	}
	for i := range list.Items {
		ret = append(ret, &list.Items[i])
	}
	return ret, nil
}

// Get retrieves the Service from the indexer for a given namespace and name.
func (s serviceNamespaceLister) Get(name string) (*corev1.Service, error) {
	return s.client.CoreV1().Services(s.namespace).Get(name, metav1.GetOptions{})
}
