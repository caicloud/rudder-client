/*
Copyright 2019 caicloud authors. All rights reserved.
*/

// Code generated by listerfactory-gen. DO NOT EDIT.

package v1beta1

import (
	internalinterfaces "github.com/caicloud/clientset/listerfactory/internalinterfaces"
	schedulingv1beta1 "k8s.io/api/scheduling/v1beta1"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/labels"
	kubernetes "k8s.io/client-go/kubernetes"
	v1beta1 "k8s.io/client-go/listers/scheduling/v1beta1"
)

var _ v1beta1.PriorityClassLister = &priorityClassLister{}

// priorityClassLister implements the PriorityClassLister interface.
type priorityClassLister struct {
	client           kubernetes.Interface
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// NewPriorityClassLister returns a new PriorityClassLister.
func NewPriorityClassLister(client kubernetes.Interface) v1beta1.PriorityClassLister {
	return NewFilteredPriorityClassLister(client, nil)
}

func NewFilteredPriorityClassLister(client kubernetes.Interface, tweakListOptions internalinterfaces.TweakListOptionsFunc) v1beta1.PriorityClassLister {
	return &priorityClassLister{
		client:           client,
		tweakListOptions: tweakListOptions,
	}
}

// List lists all PriorityClasses in the indexer.
func (s *priorityClassLister) List(selector labels.Selector) (ret []*schedulingv1beta1.PriorityClass, err error) {
	listopt := v1.ListOptions{
		LabelSelector: selector.String(),
	}
	if s.tweakListOptions != nil {
		s.tweakListOptions(&listopt)
	}
	list, err := s.client.SchedulingV1beta1().PriorityClasses().List(listopt)
	if err != nil {
		return nil, err
	}
	for i := range list.Items {
		ret = append(ret, &list.Items[i])
	}
	return ret, nil
}

// Get retrieves the PriorityClass from the index for a given name.
func (s *priorityClassLister) Get(name string) (*schedulingv1beta1.PriorityClass, error) {
	return s.client.SchedulingV1beta1().PriorityClasses().Get(name, v1.GetOptions{})
}
