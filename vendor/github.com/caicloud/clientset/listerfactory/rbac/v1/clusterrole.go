/*
Copyright 2018 caicloud authors. All rights reserved.
*/

// Code generated by listerfactory-gen. DO NOT EDIT.

package v1

import (
	internalinterfaces "github.com/caicloud/clientset/listerfactory/internalinterfaces"
	rbacv1 "k8s.io/api/rbac/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/labels"
	kubernetes "k8s.io/client-go/kubernetes"
	v1 "k8s.io/client-go/listers/rbac/v1"
)

var _ v1.ClusterRoleLister = &clusterRoleLister{}

// clusterRoleLister implements the ClusterRoleLister interface.
type clusterRoleLister struct {
	client           kubernetes.Interface
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// NewClusterRoleLister returns a new ClusterRoleLister.
func NewClusterRoleLister(client kubernetes.Interface) v1.ClusterRoleLister {
	return NewFilteredClusterRoleLister(client, nil)
}

func NewFilteredClusterRoleLister(client kubernetes.Interface, tweakListOptions internalinterfaces.TweakListOptionsFunc) v1.ClusterRoleLister {
	return &clusterRoleLister{
		client:           client,
		tweakListOptions: tweakListOptions,
	}
}

// List lists all ClusterRoles in the indexer.
func (s *clusterRoleLister) List(selector labels.Selector) (ret []*rbacv1.ClusterRole, err error) {
	listopt := metav1.ListOptions{
		LabelSelector: selector.String(),
	}
	if s.tweakListOptions != nil {
		s.tweakListOptions(&listopt)
	}
	list, err := s.client.RbacV1().ClusterRoles().List(listopt)
	if err != nil {
		return nil, err
	}
	for i := range list.Items {
		ret = append(ret, &list.Items[i])
	}
	return ret, nil
}

// Get retrieves the ClusterRole from the index for a given name.
func (s *clusterRoleLister) Get(name string) (*rbacv1.ClusterRole, error) {
	return s.client.RbacV1().ClusterRoles().Get(name, metav1.GetOptions{})
}
