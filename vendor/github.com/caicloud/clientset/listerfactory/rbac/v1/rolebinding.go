/*
Copyright 2018 caicloud authors. All rights reserved.
*/

// Code generated by listerfactory-gen. DO NOT EDIT.

package v1

import (
	internalinterfaces "github.com/caicloud/clientset/listerfactory/internalinterfaces"
	rbacv1 "k8s.io/api/rbac/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/labels"
	kubernetes "k8s.io/client-go/kubernetes"
	v1 "k8s.io/client-go/listers/rbac/v1"
)

var _ v1.RoleBindingLister = &roleBindingLister{}

var _ v1.RoleBindingNamespaceLister = &roleBindingNamespaceLister{}

// roleBindingLister implements the RoleBindingLister interface.
type roleBindingLister struct {
	client           kubernetes.Interface
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// NewRoleBindingLister returns a new RoleBindingLister.
func NewRoleBindingLister(client kubernetes.Interface) v1.RoleBindingLister {
	return NewFilteredRoleBindingLister(client, nil)
}

func NewFilteredRoleBindingLister(client kubernetes.Interface, tweakListOptions internalinterfaces.TweakListOptionsFunc) v1.RoleBindingLister {
	return &roleBindingLister{
		client:           client,
		tweakListOptions: tweakListOptions,
	}
}

// List lists all RoleBindings in the indexer.
func (s *roleBindingLister) List(selector labels.Selector) (ret []*rbacv1.RoleBinding, err error) {
	listopt := metav1.ListOptions{
		LabelSelector: selector.String(),
	}
	if s.tweakListOptions != nil {
		s.tweakListOptions(&listopt)
	}
	list, err := s.client.RbacV1().RoleBindings(metav1.NamespaceAll).List(listopt)
	if err != nil {
		return nil, err
	}
	for i := range list.Items {
		ret = append(ret, &list.Items[i])
	}
	return ret, nil
}

// RoleBindings returns an object that can list and get RoleBindings.
func (s *roleBindingLister) RoleBindings(namespace string) v1.RoleBindingNamespaceLister {
	return roleBindingNamespaceLister{client: s.client, tweakListOptions: s.tweakListOptions, namespace: namespace}
}

// roleBindingNamespaceLister implements the RoleBindingNamespaceLister
// interface.
type roleBindingNamespaceLister struct {
	client           kubernetes.Interface
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// List lists all RoleBindings in the indexer for a given namespace.
func (s roleBindingNamespaceLister) List(selector labels.Selector) (ret []*rbacv1.RoleBinding, err error) {
	listopt := metav1.ListOptions{
		LabelSelector: selector.String(),
	}
	if s.tweakListOptions != nil {
		s.tweakListOptions(&listopt)
	}
	list, err := s.client.RbacV1().RoleBindings(s.namespace).List(listopt)
	if err != nil {
		return nil, err
	}
	for i := range list.Items {
		ret = append(ret, &list.Items[i])
	}
	return ret, nil
}

// Get retrieves the RoleBinding from the indexer for a given namespace and name.
func (s roleBindingNamespaceLister) Get(name string) (*rbacv1.RoleBinding, error) {
	return s.client.RbacV1().RoleBindings(s.namespace).Get(name, metav1.GetOptions{})
}
