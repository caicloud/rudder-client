/*
Copyright 2019 caicloud authors. All rights reserved.
*/

// Code generated by listerfactory-gen. DO NOT EDIT.

package v1alpha1

import (
	internalinterfaces "github.com/caicloud/clientset/listerfactory/internalinterfaces"
	auditregistrationv1alpha1 "k8s.io/api/auditregistration/v1alpha1"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/labels"
	kubernetes "k8s.io/client-go/kubernetes"
	v1alpha1 "k8s.io/client-go/listers/auditregistration/v1alpha1"
)

var _ v1alpha1.AuditSinkLister = &auditSinkLister{}

// auditSinkLister implements the AuditSinkLister interface.
type auditSinkLister struct {
	client           kubernetes.Interface
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// NewAuditSinkLister returns a new AuditSinkLister.
func NewAuditSinkLister(client kubernetes.Interface) v1alpha1.AuditSinkLister {
	return NewFilteredAuditSinkLister(client, nil)
}

func NewFilteredAuditSinkLister(client kubernetes.Interface, tweakListOptions internalinterfaces.TweakListOptionsFunc) v1alpha1.AuditSinkLister {
	return &auditSinkLister{
		client:           client,
		tweakListOptions: tweakListOptions,
	}
}

// List lists all AuditSinks in the indexer.
func (s *auditSinkLister) List(selector labels.Selector) (ret []*auditregistrationv1alpha1.AuditSink, err error) {
	listopt := v1.ListOptions{
		LabelSelector: selector.String(),
	}
	if s.tweakListOptions != nil {
		s.tweakListOptions(&listopt)
	}
	list, err := s.client.AuditregistrationV1alpha1().AuditSinks().List(listopt)
	if err != nil {
		return nil, err
	}
	for i := range list.Items {
		ret = append(ret, &list.Items[i])
	}
	return ret, nil
}

// Get retrieves the AuditSink from the index for a given name.
func (s *auditSinkLister) Get(name string) (*auditregistrationv1alpha1.AuditSink, error) {
	return s.client.AuditregistrationV1alpha1().AuditSinks().Get(name, v1.GetOptions{})
}
